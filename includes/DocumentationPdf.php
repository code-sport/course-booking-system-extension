<?php

namespace CBSE;

use CBSE\Dto\CourseInfoDate;
use DateTime;

class DocumentationPdf extends CBSE_PDF
{
    private int $courseId;
    private DateTime $date;

    public function __construct(int $courseId, DateTime $date)
    {
        parent::__construct(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
        $this->courseId = $courseId;
        $this->date = $date;
    }

    public function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
        unlink($this->getPdfFile());
    }

    public function getPdfFile(): string
    {
        return plugin_dir_path(__FILE__) . $this->courseId . '_' . $this->date . '.pdf';
    }

    public function generatePdf()
    {
        $this->setMetaInformation();

        // Add a page
        // This method has several options, check the source code documentation for more information.
        $this->AddPage();

        // Close and output PDF document
        // This method has several options, check the source code documentation for more information.
        $this->Output($this->getPdfFile(), 'F');
    }

    private function setMetaInformation()
    {
        $cbse_options = get_option('cbse_options'); // TODO Replace

        $CourseInfo = new CourseInfoDate($this->courseId, $this->date);

        // TODO find a better place
        $courseInfo_categories = !empty($CourseInfo->getEventCategories()) ? implode(", ", cbse_helper_array_exclude_and_column($CourseInfo->getEventCategories()->event_categories, $cbse_options['mail_categories_exclude'], 'name')) : '';
        $date_string = date(get_option('date_format'), strtotime($this->date));
        $time_start_string = date(get_option('time_format'), strtotime($courseInfo->timeslot->event_start));
        $time_end_string = date(get_option('time_format'), strtotime($courseInfo->timeslot->event_end));
        $courseInfo_DateTime = "{$date_string} {$time_start_string} - {$time_end_string}";

        // set document information
        $this->SetCreator(PDF_CREATOR);
        $this->SetAuthor('Code.Sport');
        $this->SetTitle("$date_string " . get_option('cbse_options')['header_title']);
        $this->SetSubject("{$courseInfo_categories} | {$courseInfo->event->post_title} | {$courseInfo_DateTime}");

        // set default header data
        $this->setPrintHeader(false);
        $this->setFooterData(array(0, 0, 0), array(0, 0, 0));
        $this->setFooterText("{$courseInfo->event->post_title} | {$courseInfo_DateTime}");

        // set header and footer fonts
        $this->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
        $this->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

        // set default monospaced font
        $this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

        // set margins
        $this->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_LEFT);
        $this->SetHeaderMargin(0);
        $this->SetFooterMargin(PDF_MARGIN_FOOTER);

        // set auto page breaks
        $this->SetAutoPageBreak(true, PDF_MARGIN_BOTTOM);

        // set image scale factor
        $this->setImageScale(PDF_IMAGE_SCALE_RATIO);

        // set default font subsetting mode
        $this->setFontSubsetting(true);

        // Set font
        // dejavusans is a UTF-8 Unicode font, if you only need to
        // print standard ASCII chars, you can use core fonts like
        // helvetica or times to reduce file size.
        $this->SetFont('dejavusans', '', 10, '', true);
    }
}
